{"meta":{"title":"LeeKa 的酒馆","subtitle":"欢迎，旅人！坐下来享受一下暖烘烘的炉火吧。","description":"代码、音乐和游戏，一起来聊聊吧","author":"LeeKa","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-01-19T16:25:11.000Z","updated":"2021-01-20T15:41:24.833Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"欢迎来到 LeeKa Pub！ 这个页面提供本网站的一些信息。 使用须知这是一个基于 hexo 搭建的个人博客，使用 NexT 主题。 虽然名字有个 Pub，就本质而言，不过是个静态博客。所以除了阅读和评论外还是不要期待有更多的功能（例如新闻资讯、聊天交友、喝酒打牌）比较好。 与权利少相对应的，只要记得遵守中国法律法规和基本公德礼仪，就可以愉快地使用了！ 应该不会有大佬来黑这个小破站吧（ 网站内容内容上是 LeeKa 想写什么就写什么。主题大概是一下三块：计算机技术、电子游戏、音乐。 关于计算机技术： Bloger 是大学生，所以暂时并无明确方向，基本处于学到什么写什么的状态。 关于电子游戏：目前设想主要分游戏鉴赏和游戏制作两块。游戏鉴赏是对玩过游戏的评价；游戏制作则是独立游戏制作过程中学到的小知识，主要是指 Unity 引擎。 关于音乐：Bloger 对电子音乐比较感兴趣，兼听古典、摇滚、流行、Vocaloid。不过并不打算精通。目前正在学习分辨曲风中。 反馈作为 LeeKa 的互联网据点，LeeKa 会尽力逐步完善这个 Pub。 但是如果你在浏览过程中发现问题 / 可改善之处，欢迎通过邮件（&#x6c;&#101;&#x65;&#107;&#97;&#46;&#112;&#117;&#x62;&#64;&#111;&#x75;&#116;&#108;&#111;&#111;&#107;&#46;&#x63;&#111;&#x6d;）告诉我。 关于作者是个叫 LeeKa 的 善良可爱温柔温和单纯认真懂礼貌讲文明遵纪守法见义勇为乐于助人乐学善思爱国爱党热爱劳动孝敬老人尊重长辈勤学好问做事细致认真待人开朗大方爱学习爱生活爱运动作息规律 的孩子（纯真脸"},{"title":"目录","date":"2020-10-22T06:35:37.000Z","updated":"2020-10-22T06:38:40.539Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"标签页","date":"2020-10-22T06:24:10.000Z","updated":"2020-10-22T06:32:40.714Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"schedule","date":"2020-10-22T06:39:23.000Z","updated":"2021-01-19T14:49:42.180Z","comments":true,"path":"schedule/index.html","permalink":"http://example.com/schedule/index.html","excerpt":"","text":"别想了，我没有日程安排。"}],"posts":[{"title":"用批处理简化hexo命令操作","slug":"用批处理简化hexo命令操作","date":"2022-03-23T16:19:24.000Z","updated":"2022-03-24T05:20:12.907Z","comments":true,"path":"2022/03/24/用批处理简化hexo命令操作/","link":"","permalink":"http://example.com/2022/03/24/%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E7%AE%80%E5%8C%96hexo%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/","excerpt":"使用 git bash 新建博文过于繁琐，有没有更简单无脑的办法？","text":"使用 git bash 新建博文过于繁琐，有没有更简单无脑的办法？ 背景搭建好博客网站后，之所以长时间没有更新，当然是因为本人懒狗，不过除此之外，hexo 糟糕的新建博文方法也是一大原因。 有两种方法可以新建一篇博文： 在博客的本地地址建立一个新的 Markdown 文件，然后依次修改它的各部分内容。 在博客的本地地址右键选择 git bash，然后输入命令进行操作。 第一个简单，但是糟糕的地方是头部信并不是自动生成的，需要从老博文里面复制。麻烦不说，时间戳不是自动生成的、混用 _drafts 和 _posts 也总让我感觉有些难受。 第二个能自动生成头部信息，但是需要输入命令然后再关掉窗口打开编辑器，实际上也很麻烦。 但是，既然每次输入的命令都是类似的，这就自然让人想到能不能用例如 bat 批处理脚本来自动化这个过程。 答案是可以的， bat 脚本事实上就是一连串的命令。在 bat 文件中写 hexo help 和 新建一个 cmd 黑窗口输入 hexo help 没有任何差别。 使用批处理以后，可以从重复而繁琐的命令中解放时间，更好的专注于写作本身、也可以让草稿和博文真正的很清楚（而我还没有搞清楚hexo的开发者的初始设想到底是如何使用？想必不是让用户自己写批处理XD) 下面是脚本代码 实现 新建博文草稿并用编辑器打开 newDraft.bat12345678@echo off@REM 跳转到博客地址D:cd D:\\***\\***@REM 输入文件名set /p name= input Name: @REM 新建文件、唤起第二个脚本hexo new draft %name% &amp;&amp; call openEditor.bat %name% openEditor.bat1234echo the input is %1set name=%1echo %name%start /d &quot;C:\\***\\***\\VSCode的安装地址\\&quot; Code.exe &quot;D:\\博客的本地地址\\source\\_drafts\\%name%.md&quot; 这里，第一个脚本建立草稿文件，并唤起第二个脚本用编辑器（这里是VS Code）打开新建的 Markdown 文件。为什么不能写成一个文件这里我还不是非常清楚，似乎bat文件会在运行到 hexo ***后自动结束导致后面的命令运行不了。 发布（Publish）文章publish.bat123@echo offset /p publishBlog=hexo publish %publishBlog% 此脚本将指定名字的 blog 发布到 _post 文件夹中。 上传到博客网站 deploy.bat1234start clean.batstart /min /w mshta vbscript:setTimeout(&quot;window.close()&quot;,2000)start generateAndDeploy.batexit 分别调用clean和generateAndDeploy，清理缓存、生成并部署。 clean.bat123@echo offhexo cleanexit generateAndDeploy.bat12hexo g -dexit 总结 有效激发了本人的写作热情，写好脚本以后当场写（水）了这篇博文。 算是对 bat 有了一点粗浅的认识，当然还有搞不懂的地方，例如为什么运行到hexo ***以后就退出了呢？还是需要以后再看，今天鉴于时间因素，还是就此暂停了。 自己用命令测试的时候请记住要用 CMD 运行！powershell的话你大概会遇到因为在此系统上禁止运行脚本的错误,这里是可能的参考解决方法。 这篇文章是向CSDN上“蓝蓝223”的这篇文章:《bat批处理脚本自动部署Hexo博客》学习后的成果。我对代码进行了一点无关痛痒的小改动。 代码块在MPE上预览要敲 batch 才有高亮，但是要生成的网页有中有高亮得敲 dos…… 我不理解orz","categories":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://example.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"批处理脚本，hexo","slug":"批处理脚本，hexo","permalink":"http://example.com/tags/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC%EF%BC%8Chexo/"}]},{"title":"Heavenly Side ---我愿与你逃向天国","slug":"Heavenly Side个人翻译","date":"2022-02-14T15:59:59.000Z","updated":"2022-02-22T12:25:10.578Z","comments":true,"path":"2022/02/14/Heavenly Side个人翻译/","link":"","permalink":"http://example.com/2022/02/14/Heavenly%20Side%E4%B8%AA%E4%BA%BA%E7%BF%BB%E8%AF%91/","excerpt":"Heavenly Side 是收录于ILLENIUM的第四张专辑的一首歌。","text":"Heavenly Side 是收录于ILLENIUM的第四张专辑的一首歌。虽然之前吐槽水啊水之类的，但是没想到这首歌比feat Nurko的Sideways让我上头多了。虽然网易云音乐的翻译也未必没有可取之处，但是个人感觉还是略显谜语人和机翻，在“没有人比我更懂歌词内涵”的思想知道下（并不是），于是就写了这个翻译。由于个人文学素养有限、写的时候又考虑到能否唱出来而硬拗了一些词，不足之处欢迎指正。 《Heavenly Side》 -ILLENIUM -《Fallen Embers》 I’ve got an anger problem 我总是喜怒无常 I’ve got a selfish need 还变得自私自利 I like to burn my focus 我在琐事中忙碌 Just to watch my true colors bleed 只为将真我遗弃 I’ve got a taste for failure 我已饱尝失败的滋味 I find it in everything 生活中处处碰壁 But I hear the voice inside you 但我却听到你内心的声音 Say I could be more than need 告诉我存在的意义 You can’t let go if you want to 若愿意你可永不放手 ‘Cause I love you all the same 只因我的爱永不改变 It’s a long way down from here（Oh, Oh, Oh, Oh ） 此后还有漫漫长路要走 My heavenly side is comin’ alive if you want me（Oh, Oh, Oh, Oh ） 只要你愿意我美好的一面随时为你展现 And I killed myself last year(Oh, oh, oh, oh) 与过去的我一刀两断 My heavenly side is comin’ alive if you want me（Oh, Oh, Oh, Oh ） 只要你愿意我温柔的一面随时为你展现 If you want me 只要你愿意 I know that I’m the problem 我知道我就是麻烦所在 I know that I’m to blame 我知道我应该饱受谴责 But I hear the heart inside you 但我也听到你内心的声音 And it’s calling out my name 正呼唤着我的名字 You can’t let go if you want to 若愿意你可永不放手 ‘Cause I love you all the same 因为我的爱永不改变 It’s a long way down from here 此后还有漫漫长路要走 My heavenly side is comin’ alive if you want me 若你愿意我美好的一面随时为你展现 And I killed myself last year 与过去的我一刀两断 My heavenly side is comin’ alive if you want me 只要你愿意我美好的一面随时为你展现 If you want me 只要你愿意 It’s a long way down from here 此后还有漫漫长路要走 My heavenly side is comin’ alive if you want me 只要你愿意我天使的一面随时为你展现 And I killed myself last year 与过去的我一刀两断 My heavenly side is comin’ alive if you want me 只要你愿意我恶魔的一面将会永埋心中 Don’t you let go 不要放手 I found my soul 是你将我挽救 Don’t you let go 不要放手 I found my soul 灵魂怎可弄丢 My heavenly side is comin’ alive if you want me 只要你愿意我美好的一面随时为你展现 If you want me 只要你愿意","categories":[{"name":"歌词翻译","slug":"歌词翻译","permalink":"http://example.com/categories/%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91/"}],"tags":[{"name":"Music","slug":"Music","permalink":"http://example.com/tags/Music/"},{"name":"ILLENIUM","slug":"ILLENIUM","permalink":"http://example.com/tags/ILLENIUM/"},{"name":"翻译","slug":"翻译","permalink":"http://example.com/tags/%E7%BF%BB%E8%AF%91/"},{"name":"歌词","slug":"歌词","permalink":"http://example.com/tags/%E6%AD%8C%E8%AF%8D/"}]},{"title":"Take You Down ---至少不能让你失望","slug":"Take You Down歌词翻译","date":"2022-02-14T15:59:59.000Z","updated":"2022-03-24T07:12:13.306Z","comments":true,"path":"2022/02/14/Take You Down歌词翻译/","link":"","permalink":"http://example.com/2022/02/14/Take%20You%20Down%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91/","excerpt":"","text":"","categories":[{"name":"歌词翻译","slug":"歌词翻译","permalink":"http://example.com/categories/%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91/"}],"tags":[{"name":"Music","slug":"Music","permalink":"http://example.com/tags/Music/"},{"name":"ILLENIUM","slug":"ILLENIUM","permalink":"http://example.com/tags/ILLENIUM/"},{"name":"翻译","slug":"翻译","permalink":"http://example.com/tags/%E7%BF%BB%E8%AF%91/"},{"name":"歌词","slug":"歌词","permalink":"http://example.com/tags/%E6%AD%8C%E8%AF%8D/"}]},{"title":"天国王朝语摘","slug":"天国王朝","date":"2022-01-15T06:13:35.000Z","updated":"2022-01-15T17:52:54.336Z","comments":true,"path":"2022/01/15/天国王朝/","link":"","permalink":"http://example.com/2022/01/15/%E5%A4%A9%E5%9B%BD%E7%8E%8B%E6%9C%9D/","excerpt":"","text":"What man is a man who does not make the world better ? trans：大丈夫生于世当造福苍生 Be without fear in the face of your enemies;Be brave and upright that God may love thee;Speak the truth always, even if it leads to your death;Safeguard the helpless and no wrong;that is your oath. trans（LEEKA）：临敌不惧神佑勇义护良扶弱纵死不诳这就是你的册封誓言 trans：强敌当前 无畏不惧果敢忠义 无愧上帝耿直正言 宁死不诳保护弱者 无怪天理这是你的誓词","categories":[{"name":"语摘","slug":"语摘","permalink":"http://example.com/categories/%E8%AF%AD%E6%91%98/"}],"tags":[{"name":"电影","slug":"电影","permalink":"http://example.com/tags/%E7%94%B5%E5%BD%B1/"},{"name":"天国王朝","slug":"天国王朝","permalink":"http://example.com/tags/%E5%A4%A9%E5%9B%BD%E7%8E%8B%E6%9C%9D/"},{"name":"语摘，非技术","slug":"语摘，非技术","permalink":"http://example.com/tags/%E8%AF%AD%E6%91%98%EF%BC%8C%E9%9D%9E%E6%8A%80%E6%9C%AF/"}]},{"title":"如何在 VS code 中自定义代码模板（snippet）","slug":"如何在VS code中建立代码模板","date":"2022-01-05T14:01:55.000Z","updated":"2022-01-08T18:56:11.744Z","comments":true,"path":"2022/01/05/如何在VS code中建立代码模板/","link":"","permalink":"http://example.com/2022/01/05/%E5%A6%82%E4%BD%95%E5%9C%A8VS%20code%E4%B8%AD%E5%BB%BA%E7%AB%8B%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF/","excerpt":"这个功能在VS code 中被叫做片段（snippet），其功能是在输入用户定义好的触发词后，可以像代码补全一样补出一段代码。","text":"这个功能在VS code 中被叫做片段（snippet），其功能是在输入用户定义好的触发词后，可以像代码补全一样补出一段代码。 具体操作倒也不难，如下： 1.打开VS code，选择文件 =&gt; 首选项 =&gt; 用户片段 =&gt;选择对应的语言 在弹出的以下窗口中选择对应的语言、文件夹或全局，则，仅会在该语言环境、该文件夹抑或全局触发补全该代码片段。此处我以C++为例了。 2.输入代码在弹出的窗口中，你能看到已经有数行注释如下 12345678910111213// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the // same ids are connected.// Example:// &quot;Print to console&quot;: &#123;// &quot;prefix&quot;: &quot;log&quot;,// &quot;body&quot;: [// &quot;console.log(&#x27;$1&#x27;);&quot;,// &quot;$2&quot;// ],// &quot;description&quot;: &quot;Log output to console&quot;// &#125; 事实上这段英语教程已经说得比较清楚，但是作为英语苦手，还是有一定的理解苦难，这就是这篇博文诞生的原因。下做翻译补充： 每一个“代码片段”都应该由如下三部分构成，前缀（prefix）、主干和描述。 前缀是代码片段的触发器，当你在编辑代码时输入前缀（的部分），VS code 就会联想到你的对应代码片段； 主干是被补全的内容，也就是“模板”部分。你应该把代码分行写在 body 的中括号内，并把它们用双引号包括起来，同时在引号外别忘了添加逗号。即 1&quot;your code here;&quot;, 描述被用来描述代码片段的作用，当你有多个相近名字的代码片段时，这无疑有助于你区分它们。此外，这部分也允许你输入中文，或干脆不写（尽管不建议）。 需要额外注意的是最后提到的由 $ 开头的这个小功能。 它的写法是 $加一个数字或在 $ 后的大括号内依次写入”数字”“冒号”和“占位字符串”。如 123$0$&#123;1&#125;$&#123;1:spaceholder&#125; 在补全代码后，你的光标会首先停在数值最小的一个 $ 字符处，随后每次按 Tab 依次停在次小的 $ 处，最后停在代码片段的末尾或你指定的 $0 处。（尽管测试下来允许数字不连贯，但是我建议还是使用连贯的从1开始的数字比较好）。如果有多个相同数字的地方，那么光标会同时存在于这些地方。 在上方 spaceholder 部分，你可以填入默认的代码，它们在会光标（按 Tab 转移到此处时被选中以备替换）。 3. 实例接下啦，仿照给出的 Example 在下方输入你的代码即可。 123456789101112131415161718192021222324252627&#123;//这个括号是默认生成的 &quot;Print to sample&quot;://sample字段可被替换，还没找到其意义 &#123; &quot;prefix&quot;: &quot;test&quot;,//触发词 &quot;body&quot;: [ &quot;#include &lt;iostream&gt;&quot;, &quot;#include &lt;cstdio&gt;&quot;, &quot;&quot;,//这是一个空行 &quot;using namespace std;&quot;, &quot;int $&#123;1:i&#125;;&quot;, &quot;$0&quot;, &quot;&quot;, &quot;int main()&quot;, &quot;&#123;&quot;, &quot; scanf(\\&quot;%d\\&quot;, &amp;$1);&quot;,//在上方写了占位符后，这里可以只写一个数字 &quot; return 0;&quot;, &quot;&#125;&quot;, ], &quot;description&quot;: &quot;一般性简单cpp模板&quot; &#125;,//逗号在有多个片段的时候有意义 &quot;Print to another_sample&quot;: &#123; ... &#125;&#125; @import “D:\\Users\\uftx\\Documents\\hexo\\source_posts\\avatar.jpg”","categories":[{"name":"软件教程","slug":"软件教程","permalink":"http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"}],"tags":[{"name":"Code","slug":"Code","permalink":"http://example.com/tags/Code/"},{"name":"VS Code","slug":"VS-Code","permalink":"http://example.com/tags/VS-Code/"},{"name":"软件技巧","slug":"软件技巧","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%8A%80%E5%B7%A7/"}]},{"title":"中国游戏产业反思","slug":"中国游戏产业反思","date":"2021-10-26T09:40:33.000Z","updated":"2022-01-07T16:33:41.170Z","comments":true,"path":"2021/10/26/中国游戏产业反思/","link":"","permalink":"http://example.com/2021/10/26/%E4%B8%AD%E5%9B%BD%E6%B8%B8%E6%88%8F%E4%BA%A7%E4%B8%9A%E5%8F%8D%E6%80%9D/","excerpt":"2021年，关于“如何看待当今游戏产业”在国庆期间所作演讲稿","text":"2021年，关于“如何看待当今游戏产业”在国庆期间所作演讲稿 谈谈中国游戏产业的监管和未来 中国的电子游戏产业是怎样的？ 中国的电子游戏产业为什么是这样的？ 中国的电子游戏产业在往哪个方向发展？ 我们如何看待它？我们能明白什么？我们如何改进它？ 注意： 如无特殊说明，主流游戏指代的是当今世界上的主流游戏形式，即以主机为、PC为主要发行渠道的各类大型电子游戏。 如无特别说明，游戏指的是在主机，PC，掌机，手机等各类平台运行的电子游戏。 中国的电子游戏产业是怎样的？中国游戏产业发达我们有丰富的证据说明中国游戏市场的发达： 中国目前已经成为世界上最大的游戏市场，游戏用户高达6.6亿，实际销售收入两千七百多亿。是世界第一大游戏市场，有超过1/4的游戏用户都在中国。 中国腾讯是世界第二赚钱的游戏公司（2020），王者荣耀、英雄联盟、穿越火线、刺激战场都是堪称全民级游戏。 中国是电竞大国，数度在英雄联盟、DOTA2等领域捧回冠军。例如2018年，现象级的IG夺冠事件（英雄联盟S10），又如，已经成功举办9九届的Dota 2Ti赛事中，中国除2013年 Ti 3外，始终占据前三之一，在2012、2014、2016年更是夺得世界冠军。 中国游戏产业艺术属性、文化属性缺失但是，中国游戏业的发达之下，掩盖的问题是，中国游戏缺乏艺术性，难以做出让中国人叫号的游戏；缺乏文化属性，难以做到对外输出中国影响。 自从《征途》之后，国内主流的游戏类型成了基于电脑的网络游戏，而大约十年前，国内主流又变成了手机游戏。以至于有些不太关心游戏的人甚至觉得现在没人玩电脑游戏了。 这并不是说网络游戏、手机游戏低人一等，相反，从商业的角度来说，它们是更先进、更发达的形式。但是我们也需要指出，只点“网络游戏”、“移动游戏”的科技树的后果是，国产游戏并没有完全发挥游戏作为文娱产品其艺术一面的功效。 这是因为，从本质上来是，单机游戏和网络游戏是两个不一样的东西。前者卖的是产品，后者卖的是服务。单机游戏作为产品，它在内容体验上是完整的、大致固定的。而网络游戏作为服务，为了让用户持续的玩下去，体验是不完整的、持续时间是不定的。而且，这意味着，如果我们想用游戏来阐述一个富有魅力、打动玩家的故事较为困难。 而且，由于网游是提供服务，吸引玩家充钱，而不是做出好玩的游戏然后吸引玩家交钱。因此网游的重心必然是在吸引充钱上，这也无形中降低了对剧情等内容的重视程度。 尽管有王者荣耀里有对历史原型人物的科普等相对正面的例子，但是整体上我们的游戏业并没有把弘扬中国文化这一块做好。例如，许多外国人对中国三国文化的认识来自于日本的《三国志》等游戏，对内，反映我国群众思想、喜好、生活的游戏也并不多见。 中国游戏长期与社会割裂由于中国长期以来以PC和移动端为主的网络游戏占市场主流，加上社会对电子游戏存在的较大偏见，导致了社会认知中的游戏和实际上的游戏业是割裂的，带偏见的。 例如，许多人觉得现在没有什么电脑游戏了。 有的人觉得，玩游戏还要买简直不可理喻。 有人觉得游戏就是“电子鸦片”、洪水猛兽。 针对近期新闻出版署公布的未成年防沉迷规定，玩家们就改出了许多不同的梗图以作对“家长”们的嘲讽【此处应有图】 种种和实情相去甚远的偏见不仅使得游戏业的发展受到来自社会舆论方面的较大阻力，也使得监管层迫于舆论压力对行业动手。 中国的电子游戏市场为什么是这样的？这个问题可以谈很长， 我们可以批评中国不像美日有深厚的桌游史，因此没有继承游戏文化，才导致畸形发展。 可以批评是血狮为代表的发行商们寒了中国玩家的心，让投资者和玩家都不愿意购买中国单机游戏， 可以批评是以史玉柱的征途为代表的一系列强氪金网游压死了中国游戏商。 可以批评中国家长，他们总是“以孩子玩了怎么办”阻碍中国游戏脱离幼稚的主题和画风。 但是，我们认为中国游戏监管是中国游戏业成为当今形态的主要原因。（请注意，这并不是说监管是唯一原因，也不是说监管方是一切问题的根源） 下面，由三个重要政策的颁布浅窥监管对游戏业的影响。 游戏机禁令：70年代，雅达利制造出世界上最早的游戏机，电子游戏产业逐渐萌芽。90年代，乘着改革开放的东风，游戏机和游戏文化传入了中国。由于当时政府管制不到位，大量企业依靠山寨外国游戏机（小霸王），盗版或仿制外国游戏起家。在对企业监管都不到位的环境里，对个人的监管就更不可能到位了。在当时，黑网吧、黑街机厅等遍地。不可否认的是，在这类场所，人员往来成分混杂，争吵斗殴不时发生。 2000年，光明日报两度刊文分别以《别让游戏机害了一代人—一位母亲的呼吁》和《观点：电脑游戏是瞄准孩子的“电子海洛因”》批评（黑）游戏机（厅）。文章认为，游戏机是毒害青少年的”电子海洛因“，不仅容易上瘾，而且会诱导逃学、夜不归宿、甚至抢劫等不良行为。这引起了孩子被游戏厅毒害的父母的共鸣，社会上引起轩然大波。六月，国家七部门联合发布《关于开展电子游戏经营场所专项治理的意见》（俗称游戏机禁令）。尽管该意见的对象是街机游戏机（而不是家用机），但是在具体的实行过程中，最终演变成了所有游戏机。 家用机（俗称游戏主机）在中国正规市场的消失，无疑是造成了主机游戏在中国的绝迹的直接原因。而世界的主流游戏形式依然是主机平台为主的。换言之，中国的玩家从此很难玩到大部分国外优质游戏，中国游戏开发商也几乎不会进行主机游戏开发。 这就导致了中国转向以PC和手机等非完全游戏设备上的游戏开发（由于有非游戏需求，不能被禁止）。而PC平台的开放性引发的盗版传播潮，又使得中国的游戏形式转为是以免费内购制联网游戏为主。 这一转向，使得付费单机游戏被中国彻底抛弃。中国单机游戏市场萎靡不振，与百花齐放的国外游戏市场形成鲜明对比。 如今，电子竞技在国内引发热议，不仅受众甚多，国际赛绩不俗，而且电竞专业、电竞酒店、电竞馆、电竞电视剧各类衍生品也层出不穷。某种程度上，也正是游戏机禁令的衍生物。 游戏版号制度2004年，文化部建立网络游戏内容审查制度，在新华网的一篇采访中提到，审查的目的因为 一是网络游戏产品中存在色情、暴力、赌博、愚昧、迷信以及危害国家安全等不健康内容； 二是未经内容审查的境外网络游戏产品充斥我国网络游戏市场，市场绝大部分为境外产品，大约占８０％以上； 三是容易影响缺乏自制力的未成年人的身心健康，有的深陷其中、不能自拔并诱发一系列社会问题。 而违规内容简单的概括，有：反国辱国、违背社会公德、邪教、谣言、宣扬色情赌博暴力等。 这些规定有问题吗？似乎没有。但是，版号下发数量稀少，具体过审规则暧昧，尤其是在前几年下发还不是依据申报前后、不分企业大小排队的情况下。版号制度事实上极大的打击了中国中小游戏开发商。他们很难拿到版号，即使拿到版号，为了过审，也不得不大量删改内容。 这一制度，给有心做出中国好游戏的中小型开发商又套上一层枷锁，磨灭了独立游戏在国内存在的土壤，加剧了市场中马太效应的作用。 同时，由于文化讨论更容易触犯规则，一个版号吃多年的网络游戏比几年一换的单机游戏申报成本更低，游戏商们也更不愿意做剧情、做价值输出内容。更不凸显网络游戏作为文化产品，其文化和艺术性一面的作用。游戏们变得剧情上乏味而空洞。 最糟糕的是，缺乏正规渠道接触优秀电子游戏使得孩子们认识游戏的渠道极容易出问题——而这又恰恰很有可能导致孩子成绩下滑暴力等问题，因为一些国外认定18+甚至的血腥暴力以及色情游戏可以在国内轻易获取。 最近的精神鸦片事件。在2017年PUBG的大热，曾经以CS而为人熟知的Steam平台再次进入大众眼线。 Steam是美国Valve公司开发的游戏平台，由于并非中国企业，在Steam上架游戏并没有版号要求，因此在意识到steam上有广阔的国内和国际市场后，许多独立游戏开发者开始将尝试把自己的游戏上架Steam。于是，我们惊奇地发现，中国游戏产业并非烂泥扶不上墙，并不是没有做出好游戏的能力。 没有雄厚技术和资金的国内独立开发者们做出了包括《中国式家长》、《太吾绘卷》、《戴森球计划》、《烟火》、《暗影火炬城》等题材不同、玩法不同的好游戏，他们中的不少都曾经打入steam周销量榜前十（全球），引起国内外玩家热议，而《动物派对》登陆2021年（全球最大游戏展之一的）E3游戏展微软展台，《黑神话：悟空》得到了几乎整个中国游戏圈子的追捧，更是引来国外众多游戏开发者与玩家的热议…… 不止如此，就在今年七月末公布的《2021-2022年度国家文化出口重点企业和重点项目名单》中，不仅有58家游戏公司在列，还有包括《明日方舟》、《原神》、《贪吃蛇大作战》、《波西亚时光》等八款游戏。 这些在海内外都有巨大反响的游戏，证明了中国开发者完全有能力做出优秀的游戏。然而… 就在公布上述名单后不久，央媒经济参考报发文《“精神鸦片”竟长成数千亿产业》短短四个小时内，腾讯股价下跌约9%，心动网络下跌约13%，网易下跌约15%，中手游下跌约20%……各大厂商累计蒸发市值约三千亿。 尽管四个小时后，这篇被炮轰“来自二十年前”的文章就遭到删除。但是腾讯当天依然迅速推出双减双打政策进一步限制未成年人游玩。后面的事情大家都知道，30号，国家新闻出版署出台政策将未成年人的游玩时间杀到每周三个小时。而八月开始，八、九、十三个月游戏版号无原因的停发了。而上一次（2018年）大半年的停发，仅腾讯市值蒸发1500亿美元，最低时，仅有停发前的约六成。 当今游戏监管的不确定性和对游戏市场的影响力可见一斑。 如何看待中国游戏产业？（当下：）游戏已经成为年青人的生活方式在2020年，中国已经超越美国，成为世界第一游戏产品消费国，其中主力是18-22岁的青年人。不少人以前不玩游戏，但是却被身边的人带入了王者荣耀全民电竞“坑”，又或者开始了解原神是怎么回事。在游戏平台steam上，中国已经成为最大的购买来源群体。越来越多的外国游戏开始将中文、尤其是简体中文作为游戏标配，甚至有独立游戏开发者抱怨因为没有成本进行中国的本地化工作导致游戏遭到差评轰炸等问题。 而各类游戏的新闻在社交媒体上也都相当有话题度和二创活力。游戏内的一些术语例如白嫖、氪金、肝帝、开黑、PK、欧皇等词汇也早就超出游戏范畴，成为日常生活的一部分。 不仅如此，通过二创和衍生周边等，游戏还带动了网络文学、动漫、电影、电视剧、广告、电竞、网络直播和VR等产业的发展。 而在开发者一侧，越来越多的人开始对游戏制作感兴趣。各类小型团队活跃在taptap、steam等游戏平台上。甚至也不乏游戏科学这样从腾讯离职创业的团队。他们今年八月末的视频，截至10月12日依然有100多人看，斩获两千多万的播放量（仅B站）。 从这个角度来看，游戏产业和青年人联系紧密，是一个极其活跃的群体。 （未来：）游戏产业正期待变革首先，我们需要指出的是，尽管我们前面写了许多监管的不好。但这绝不意味着游戏业是不需要监管的。游戏业是一种文化产业。无论中外、无论古今，都必须受到监管。这才是对游戏及其他任何文化产品负责任的做法。 而正如刚刚我们所说，游戏产业是一个广受当代青年、少年、孩子喜爱的的产业。无论我们承不承认游戏是所谓第九艺术，游戏作为一种新兴的、与国家未来们密切相关的行业，都需在正确的、合理的监管下健康发展。而这正是我们目前所缺乏的。 一方面，历史上的错误决策导致了如今腾讯网易形成垄断，在缺乏竞争的市场环境下，它们缺乏创新动力。大厂没有创新意愿等问题，进一步的就导致国内游戏业人才凋零、技术落后，削弱国产游戏竞争力。 另一方面，如今又一次趋严、趋保守的监管，对游戏业过于严苛，不仅甚至有可能抹杀现有的游戏出海热等繁荣状态，而且政策上的消极，也会加重社会上部分媒体、家长对游戏本就存在的偏见，使得“电子海洛因”的形象更深入人心。 作为一个庞大而年轻的产业，游戏业的发展离不开监管层对审核标准的进一步放开。越来越开放的的中国、日益热闹的游戏开发行业和广大的游戏玩家们，也呼唤着更规范而开放的监管层的出现。 而监管层呢，近年来也在有意放松，例如，2015年，游戏机禁令取消，我们能在正规渠道买到游戏机了。2020年，游戏适龄提示上线，有了些游戏分级的影子，甚至新闻出版署的未成年游玩限制新规出台，玩家们都疯传这样一种说法：新规意在堵住觉得游戏是坏东西的部分家长一口。而对于家长更开明的那些孩子而言，家长并不会介意帮助实名，因此不会受到影响。【此处需要图】 因此我们有理由相信，游戏产业监管正需要且正迎来一场变革，游戏监管一定会更加合理。使得游戏产业不仅有机会成为拉动经济增长的新力量，也成为我国文化输出的一大亮点。 （过去：）游戏（的监管史）是代际隔阂的当代写照 任何在我出生时已经有的科技都是稀松平常的世界本来秩序的一部分。任何在我15-35岁之间诞生的科技都是将会改变世界的革命性产物。任何在我35岁之后诞生的科技都是违反自然规律要遭天谴的。 以《银河系漫游指南》闻名的科幻小说作家道格拉斯·亚当斯曾经写下上述这个著名的“科技三定律”。这虽然夸大而滑稽，却深刻反映了许多问题，例如，世风日下、人心不古这两个词语是怎么来的。例如，为什么金庸的武侠小说从孩子们偷着看变成了老师的推荐数目，周杰伦从“话都念不清楚”的差劲流行歌手变成了当代流行音乐天王。 有个网民【未知】曾经辛辣的讽刺： 我们不需要知道电子游戏是什么，它会不会造成近视，它会不会上瘾, 我们只需要一个背锅侠，一个可以掩盖家庭教育失败、 学校教育失败、社会教育失败的东西， 现在它叫游戏， 十五年前它是早恋, 三十年前它是偶像, 三十五年前它是香港电影， 四十年前它是武侠小说 这指出了部分家长的甩锅心理，但是我们要说的，他们之所以甩锅给游戏，正是因为他们带着偏见的眼光中，游戏是不好的。当代游戏产业的许多不合理之处，我们骂莫名其妙的监管、贪婪无度的游戏公司、骂不明事理的熊娃家长……说到底，就是在骂那些觉得游戏是“违反自然遭天谴的”，骂那些觉得自己不懂的产业就带着原罪的人。试想：如果监管者觉得游戏是大毒草，游戏的审核又怎么能公平合理呢？如果游戏公司老板觉得游戏就是一个捞快钱的地方，我们的游戏又怎么可能会吸引到玩家的注意力呢？如果家长觉得游戏是电子海洛因，又怎么可能在孩子成绩下降后不怪罪呢？ 如果我们今天只谈游戏产业受到了歧视和偏见，也许有朝一日随着玩游戏的一代人长大，游戏不会再被污名化，但是却会有其他产业被污名化。(例如短视频?）。从这个角度来看，游戏产业不过是当代文化产业快速发展大格局下，被推出来背“世风日下”这口大锅的那个。这是游戏产业的悲哀，也是每一个新兴文化的悲哀。 当然，正如我们也能看到一些开明的家长，一些孩子高三了家长帮忙上号代打的新闻等等，所谓“科技三定律”其实并非“定”律。这是可以改变的。一方面，做为玩游戏的青年人，我们有义务为游戏（和其他的新媒体、新文化）正名，为之发声，让更多家长辈的人明白、理解，游戏其实并不特殊，它不过是当代的一种新娱乐方式而已。另一方面，作为反思，我们是不是也在不知不觉中犯了类似的错误呢？生为00后的我们，对10后的娱乐是否又认真了解过，而不是简简单单的一句“哼，小孩子玩的”带过呢？ 愿我们都能多一些理解，少一些理所当然和“世风日下、人心不古”。 【报告结束】","categories":[{"name":"小文章","slug":"小文章","permalink":"http://example.com/categories/%E5%B0%8F%E6%96%87%E7%AB%A0/"}],"tags":[{"name":"Game","slug":"Game","permalink":"http://example.com/tags/Game/"},{"name":"OverThoughts","slug":"OverThoughts","permalink":"http://example.com/tags/OverThoughts/"}]},{"title":"搭建个人博客 || 二、域名跳转和写博客","slug":"个人博客上岸回顾(二)","date":"2021-01-18T11:17:30.000Z","updated":"2022-03-24T05:44:50.981Z","comments":true,"path":"2021/01/18/个人博客上岸回顾(二)/","link":"","permalink":"http://example.com/2021/01/18/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%E5%B2%B8%E5%9B%9E%E9%A1%BE(%E4%BA%8C)/","excerpt":"提要：如何把域名解析到自己的网址和输出内容","text":"提要：如何把域名解析到自己的网址和输出内容 前言首先声明，把域名解析到自己的网址不是必要的，扔在 GitHub 就挺好。不过为了简洁好记和个（耍）性（帅），而且手上“恰好”有一个域名，那干嘛不折腾一下呢？并不是因为重新入坑所以把后期内容提上来了 确实还有很多事想做的！换背景、加音乐、换主题……但是内容永远是第一位的。所以，我们先讨论如何写博客。 写博文关于Markdownhexo 下博文以 Markdown 格式存储于本地，也就是 part 1 中我们一开始新建的文件下。因此，我们需要一款 Markdown 文本编辑器。目前我的 Typora 使用手感尚好。够简洁优雅，” 所见即所得 “ 的特性对萌新也够友好。你可以从官网下载到它。 至于 Markdown 的语法，建议花五分钟在百度上，然后熟能生巧即可。额外一提的是，hawa130 那学到的在字母数字前后空一个空格的习惯很棒，建议养成。（欸？真的有人来看？） 文章的模板你一定注意到，正如这篇博文，有创建日期、标签和目录等信息，这些非正文内容存在于文章的开头，形式如下： 这一部分由 hexo 生成，在 Git Bash 中使用 hexo new postname 生成一篇名为 postname 的新博文 。 而其模板在博客根目录\\scaffolds\\post.md 文件中。推荐添上 categories 和并在正文中写下““””文章在此处折叠）。 当然，此处还有 draft 和 page 两个模板，由于本人目前写文章是写好一篇更新一次，所以 draft 等没有用上。目测 draft 是上传至 GitHub 但不发表，page 则不知道由什么用。 写好以后，打上合适的 tags 和 categories ，再重新部署（hexo d）一下，就可以在博客上看到自己的新文章了！（顺便一提，多 tag 的格式如图哦） 域名解析","categories":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://example.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Code","slug":"Code","permalink":"http://example.com/tags/Code/"},{"name":"静态博客教程","slug":"静态博客教程","permalink":"http://example.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"}]},{"title":"古埃及旅游指南 || 三、古埃及的一些事物与文化","slug":"古埃及旅游指南：文化篇","date":"2021-01-18T11:17:30.000Z","updated":"2021-11-27T01:45:22.869Z","comments":true,"path":"2021/01/18/古埃及旅游指南：文化篇/","link":"","permalink":"http://example.com/2021/01/18/%E5%8F%A4%E5%9F%83%E5%8F%8A%E6%97%85%E6%B8%B8%E6%8C%87%E5%8D%97%EF%BC%9A%E6%96%87%E5%8C%96%E7%AF%87/","excerpt":"提要：这是一篇对神话篇、历史篇未涉及但是又有趣的一些内容补充，请注意你必须要先对历史、神话篇加以了解以免出现理解上的困难。","text":"提要：这是一篇对神话篇、历史篇未涉及但是又有趣的一些内容补充，请注意你必须要先对历史、神话篇加以了解以免出现理解上的困难。 古埃及的墓穴和葬仪 在古埃及对国王和大多数社会阶层而言，在思想上进行统治的一个非常重要的方面就是丧葬祭仪。不朽的陵墓建筑和丧葬祭仪象征着国家和统治机构。有些坟墓周围埋有陪葬者。例如埃及第一王朝第三任国王哲尔，他的墓穴周围有300多个陪葬者，这也是埃及历史上唯一用活人陪葬的时期。第二王朝的国王不再采用这种仪式。 木乃伊 木乃伊虽然不是古埃及的专利，但是古埃及的木乃伊无疑是最有名的。埃及神话相信死者会再次苏生，所以想方设法的保护死者的躯体也就成了一件重要的事。 不仅是法老，一般人的死也会经历木乃伊化的过程，尽管不同年代、不同阶层有很多区别，但是粗略来说，古埃及人会把死者的内脏等清理干净、涂上油防腐、还要裹上亚麻布。然后和其他的陪葬品一同安葬。 木乃伊也不是人的专属，很多的动物，尤其是猫，不仅是神圣的女神巴斯特的象征，还能抓耗子保护谷物，还可爱。 也经常被做成猫乃伊。 石棺铭文 虽然君主的权威在不断增强，但古王国末期和第一中间期的混乱局面大大削弱了王权在人们心中的地位。王权不再像过去那么神圣，在宗教上的权威地位也大打折扣。从人们去往来生世界的某种更为民主化的形式，可以明显的看出这一点。包含在金字塔铭文中的咒语经文，不再是国王和王后所独享的特权，而是只要买得起，任何人都可以将其刻在棺柩上。这就是我们所说的“石棺铭文”。中王国时期，铭文的数量激增，为我们提供了比古王国更多更直接的历史资料。这一时期的语言成了古埃及时期的标准经典语言，即中古埃及语。预言书，道德故事，赞美诗等叙事体文学作品大放异彩，成为中王国时期重要的文化成就之一。这些作品中最著名的是《西努赫流亡记》和《遇难水手的故事》，在中王朝结束很久之后，这两个故事仍然为人们所传播 古埃及丧葬习俗（英文）： https://en.wikipedia.org/wiki/Ancient_Egyptian_funerary_practices 医药 如果单就文字的运用而言，有许多时候和一般所谓的文学不同的实用性文字，埃及人的实用性格在这类文献中有清楚的表现。首先是医药方面的作品，用现代的概念来说，有属于医理方面的手册，包括对疾病的判断，或者治疗疾病的方法，也有属于药方之类的作品，虽然其中有时不免有巫术之类的手段。在一卷有关外科手术的文献中，我们可以看到以下记载：若你检查一个头部受伤者，伤势深入头骨，但并没有伤口，你应该轻触他的伤处。如果你发觉他的头骨没有受损，没有穿洞，没有裂痕或破碎，你应该对他做如下的诊断：“此人头上有伤，伤口没有裂开，虽然伤势深入头骨。这个伤我可以治。”你应该在第一天时将伤处用新鲜的肉敷住，而后每天施以油脂，蜂蜜，绷带，直到他康复。在古代世界中，埃及的医学的确是相当著名，许多希腊时代的作品都提到埃及医学和药物对他们的影响。而埃及人制作木乃伊的习俗也很可能与埃及医学中外科医学的发达有某种关系。 数学和几何 埃及人在建造金字塔和神庙这类的建筑活动中显然必须依靠相当精确u的数学计算，否则不可能成功。不过埃及的数学基本是从实用着眼，只求能够解决实际的问题，而没有理论上的兴趣。我们目前有关埃及数学的了解主要来自中王国时代的两份草纸文书，以及一些较晚而零散文献。基本上，埃及数学以十进位，而他们只用单位分数，如1/2,1/3,1/4等等，唯2/3例外。因而3/4是以1/2加1/4来表示。而数学的基本运算是以加法和倍数为基础，例如13乘以17，埃及人的写法是： 答案是将左边取1+4+8=13，右边相应地取17+68+136=221，结果为13*17=221。除法也用相似的方法，只是倒过来。至于几何学，埃及人的水平也大致限于简单的面积和体积的计算，但显然这些已足够让埃及人得到实用的数据。 法老的胡须 毛发是容易藏污纳垢的地方，所以爱干净的古埃及人就想了聪明的办法：把原来的毛发剃掉，然后戴上假发和假胡须。就能美观又干净了【如下图】 一个小细节是，法老在世时的胡须是直的，逝去的法老的胡子则和神的一样是弯的。这是因为法老去世是被认为回归神明之列。 参考： 古埃及练习曲，头发与假发（上），（繁体字） 知乎，法老的胡子有什么特殊的含义吗？ 努比亚人 努比亚人是埃及人的南方邻居，和埃及关系密切。埃及第25王朝就是努比亚人的王朝。而八爷担任的职务：守护者，职责最初就来自努比亚人的文化。 芦苇（莎草）、芦苇船、莎草纸 在埃及的绿洲边，常常能发现一种高大的草，这就是莎（suo）草，也被称做芦苇。（尽管生物学上来说芦苇和莎草是不同的）。有芦苇，就有水，有绿洲和肥沃的土地。因此古埃及人特别喜爱芦苇。 他们不仅用它做出了莎草纸、芦苇船，用芦苇的根茎作为神的贡品，对于死后天堂的描述也是一片长满芦苇肥沃的土地——芦苇原。 莎草纸，也许是世界上最早的一类纸，古埃及人从公元前3000年开始就用这种纸书写（这个时候，中国真处于尧舜禹的时代，再过三千年多年，东汉蔡伦才改进造纸术）。 不过，因为莎草只长在埃及地区，又不耐潮湿，在埃及以外的区域普及度并不高。所以在羊皮纸和更后来的中国纸的普及下莎草纸就逐渐失传了。不过，经过上个世纪的一个埃及工程师的研究，人类重新发明了莎草纸的制法。（尽管并没有什么使用价值就是了） 芦苇船，字面意思，就是用芦苇编成的船。在游戏中有两种小船，一种是士兵们坐的木制兵船，另一种则是平民们划的装满蔬果的芦苇船，如果用带火的箭头靠近船身，很快就会看到船被点燃。 参考： 维基百科，莎草纸：https://zh.wikipedia.org/wiki/%E8%8E%8E%E8%8D%89%E7%BA%B8 维基百科，纸莎草：https://zh.wikipedia.org/wiki/%E7%B4%99%E8%8E%8E%E8%8D%89 三桨座战船 游戏里出现频率最高的战船（兵营），古代希腊人和罗马人的一种战船，所谓三桨座的就是一边有三排桨。 参考： 刺客维基，三列桨座战船 三个桨的排布可参考维基百科下图【插入维基图片】 战象 大象皮糙肉厚，体型庞大，无论是实际战力还是对人的压迫力都极强。因此波斯帝国在和印度交战的过程中，学会了驯化大象进行战斗。之后，这一技巧又被与之交战亚历山大大帝学到。托勒密王朝最后从亚历山大人那里继承这一手段。此外，罗马人的老对手，迦太基人也点出了驯化非洲象作战的技能，并在布匿战争中被罗马人学会。这就是为什么我们能在特定的兵营里挑战罗马的战象。 埃及王冠 正如我们在历史篇中提到，埃及是由上下埃及两片构成。上下片无论是地形水土还是文化都有一定差别，因此，埃及王冠由上下埃及王冠合在一起构成的，表示法老同时统治上下埃及。 外圈是下埃及之冠，由于颜色，它也被叫做“红冠”。 内圈是上埃及之冠，由于颜色，它也被叫做“白冠”。 所以完整的王冠也就可以简单粗暴地叫做“红白双冠”。 同时，为了表示神的庇佑，在王冠前端还有上下埃及守护女神的象征，眼镜蛇（下埃及女神瓦吉特）和秃鹫（上埃及女神奈赫美特）。需要提醒的是，秃鹫女神奈赫美特不是母狮女神塞赫美特。 圣书体 圣书体顾名思义，是书“圣”的字体。这是一种用于给祭司们书写祭祀等神圣之事的字体。在游戏神庙的墙上就能看到。虽然随着古埃及文化的消亡，圣书体最终失传，但是它是世界上几乎所有字母系统（例如英语中的ABCD）的起源。 埃赫那顿事件（要不要放进游戏后篇呢） 埃赫那顿是新王国时期的十八王朝的一位法老。在他在位的年代，他干了一件惊世骇俗的事情：对宗教进行改革，否认拉、荷鲁斯、阿蒙等神的存在，认为世界上只有一个神，也就是太阳神阿顿，有人认为这是世界最早的一神论——要知道这个时候是公元前1000多年前！不仅如此，埃赫那顿还把都城由底比斯迁到新修的埃赫塔顿（这个名字也是为了纪念阿顿神） 不仅如此，他的王后也不同寻常。王后娜芙蒂蒂美貌惊人，而且很有能力，她和丈夫一同推进宗教改革、而且拥有一些以往只有法老自己独占的权利，甚至有埃及学家怀疑埃赫那顿的继位者斯门卡瑞就是娜芙蒂蒂化名。 尽管埃赫那顿统治了不短的时间，但是在他去世后，宗教改革成果还是迅速被不满的祭祀们破坏了。斯门卡瑞短暂的统治之后，法老之位传到了埃赫那顿的儿子图坦卡蒙手上。年幼的图坦卡蒙即位后，立即将名字由图坦卡顿（也就是“阿顿的人间化身”）改为图坦卡蒙（“阿蒙的人间化身”），他还把首都迁回底比斯、把父亲的墓改迁回传统的帝王谷、恢复祭司们的职位……而埃赫那顿、阿顿等名字也被刻意的从碑文上抹除，成为一段被刻意避讳和遗忘的历史。 图坦卡蒙的墓 在古埃及王室，近亲结婚现象非常普遍，即使到了八爷的托勒密时代也是如此。而图坦卡蒙，是埃赫那顿和他的姐妹（被埃及学家称为“年轻女士”）的孩子。近亲结婚的后果之一，就是严重的遗传病，根据科学研究，图坦卡蒙有包括脊椎侧弯和兔唇、骨组织坏死等种种疾病，年纪轻轻就需要拄拐杖，最后19岁就英年早逝。 图坦卡蒙之墓在上世纪20年代被英国的一行考古团队找到。保存得极其完好的图坦卡蒙墓不仅成为考古学的大发现，还引起全球轰动。而数位早期探险家的早逝，也引发“法老的诅咒”这一谣言，给古埃及文化戴上一层神秘魔幻的面纱。从那以后，的电影、小说、游戏在使用古埃及的文化形象。某种程度上来说，今天能玩到刺客信条起源，也离不开那次图坦卡蒙之墓被发掘的影响。 为什么游戏里图坦卡蒙和娜芙蒂蒂的死后世界入口在一个墓里呢？这是因为在2015年，科学家们发现图坦卡蒙之墓似乎是改建于在一个女性的墓，而这个女性，就极有可能是被祭司们试图抹杀存在的娜芙蒂蒂王后之墓。 参考： 维基百科-图坦卡蒙 古埃及练习曲，2015年度風雲人物──圖坦卡門","categories":[{"name":"刺客信条旅游指南","slug":"刺客信条旅游指南","permalink":"http://example.com/categories/%E5%88%BA%E5%AE%A2%E4%BF%A1%E6%9D%A1%E6%97%85%E6%B8%B8%E6%8C%87%E5%8D%97/"}],"tags":[{"name":"Game","slug":"Game","permalink":"http://example.com/tags/Game/"},{"name":"Culture","slug":"Culture","permalink":"http://example.com/tags/Culture/"}]},{"title":"搭建个人博客 || 一、在本地搭好博客","slug":"Code 个人博客上岸回顾","date":"2020-10-26T16:37:19.000Z","updated":"2022-01-07T19:54:18.325Z","comments":true,"path":"2020/10/27/Code 个人博客上岸回顾/","link":"","permalink":"http://example.com/2020/10/27/Code%20%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%E5%B2%B8%E5%9B%9E%E9%A1%BE/","excerpt":"对搭建博客的过程的一个复习、深入了解和小白教程。","text":"对搭建博客的过程的一个复习、深入了解和小白教程。 前言基于这个视频，感谢 Codesheep dalao 和评论区的各位同学者。依照up主的视频使用了 hexo + Github ，不过，我是基于 Windows 10 进行操作的。 也是对搭建博客的过程的一个复习和深入了解吧，也可以给小白做参考。虽然提到个人博客感觉是我会去做的事情，但是，如果不是 hawa130的帮助以及 XDMSC 的面试，大概会在很久很久以后才会想到去搭一个博客。感谢dalao们的帮助吧。 那么，正式开始吧！ 准备前置工具安装： Node.js （及 npm ) 在官网下载安装即可。node.js 是 hexo 前置软件，npm 则是 node.js 其中附带的包管理器。如果一切顺利，那么，在控制台（ cmd 和 PowerShell ）运行node -v和npm -v应当可以看到 node.js 和 npm 的版本号。 Git 官网下载安装即可。安装完成后，可以启用Git Bash。 cnpm 和 hexo 部署插件 hexo 是基于 node.js 的博客框架，本来应该是使用 npm 进行安装，不过，考虑到连接外网速度的问题，我们先换一个下载源。 在命令行界面下，键入npm install -g cnpm --registry=https://registry.npm.taobao.org，即可安装 cnpm 。（可以理解成下了一个高速下载器来下文件）。 cnpm 安装完成，于是键入 cnpm install -g hexo-cli 即可安装 hexo 了（注意格式上和上一个命令的相似性)。如果一切顺利，应该可以运行hexo -v 校验版本安装成功与否和校验版本。 正式的步骤初始化一个博客在喜欢的地方新建文件夹1并命名成喜欢且易记忆的名字 ，这个文件夹会在本地存储博客的所有内容 。可以使用命令行新建文件夹（参考 codesheep 的视频），也可以用我们更常见的那种方法新建。 然后在文件夹内右键选择 Git Bash Here，又或者在任何地方调出 Git Bash 之后跳转到我们新建的文件夹（参考百度和前文提及的视频） 。也无论如何，在该目录下，Git Bash 中输入hexo init即可（可加上sudo以使用管理员权限）。（init：initialize） 启用博客在上述的博客文件夹下运行 Git Bash 。输入hexo s（ s：server ）即可开始编译，并在 localhost:4000 这个内部地址上展示。如果一切正常，那么就应该看到一篇名为 Hello World 的博文在博客网页上欢迎我们的到来。 推送到远端（GitHub）用别的其实也ok，比如说 Coding 。因为GitHub是真的慢，不过，此处我们选用的依然是GitHub，二者其实差别并不太大。 首先需要一个 GitHub 账号。 然后，点选 Repository 边的 New 新建一个库。记住 repository name 只能填写为 “ GitHub 用户名.github.io” 的形式。 安装 Git 部署插件：回到 Git Bash 界面，在博客目录下输入cnmp install --save hexo-deployer-git安装 Git 部署插件以把博客部署到 Github 上（ 注意 Git 和 GitHub 不是一回事 ）。 修改配置文件：在博客目录下找到 _config.yml 用编辑器打开（记事本也行，我选用的是） 。滑到最低端找到 deploy 。把 type 后面引号中写入 git 。然后换行写上：repo： ……省略号指我们在 GitHub 建立的库的网址。再换行写上branch: master 。 部署：用hexo g来生成（generate）HTML网页文件，键入git config --global user.email &quot;xxx&quot;和git config --global user.name &quot;xxx&quot;配置 GitＨub 账号的邮件地址和用户名（替换 xxx ）。然后键入 hexo d 来部署（deploy）到远端。第一次部署应当会出现弹出窗口要求输入密码。 这里需要注意！一共需要输入两次密码。第一次的时候，你应该输入你的 GitHub 账号和密码，第二次的则须如下获取。 首先GitHub网页点击头像 -&gt; Settings -&gt; Developer Settings -&gt;Personal access tokens -&gt;Generate new token。创建一个新的 token ，设定其权限和名字（ 保险起见，建议给予所有权限 ），随后 GitHub 会分配给它一个 password 。这里的名字和密码才是第二次所需输入的。需要注意的是，你只有一次看到密码的机会，所以一定要保存好。以防日后用到。 然后，打开浏览器，网址栏输入建立库的地址．就能看到个人博客了。All Done ! P.S. 如果发现修改没有带来应有的变化，记得清除浏览器缓存。不过以上步骤应该用不到这个 P.S. 。 曾经觉得还会有的内容：给这篇博文查缺补漏，添加图片、如何推一篇博文到博客上、如何换博客主题、整合补充用到的命令行指令、把个人网站解析到个人博客上，原理问题（为什么要下这么多东西啊？！） 有的内容可能会写在新的博文里面。 考虑到还要挣扎一下软件组的题目的时间问题和还不太懂的能力问题以及我懒的问题，这次还是就此暂停吧。让写博文督促我查缺补漏，深入学习！ 后言本人咕咕咕的能力又一次得到了体现啊哈哈。这一切都怪学校安排的作业太多了！真的哦？真的真的！！真是的，都和你说了是真的啊！！！ 好吧，抛去玩笑话，其实是想把域名从腾讯云转去阿里云的时候出了岔子。必须要等注册满14天才能删号重新来过,就先放着了，结果放下后就再也没有拿起来过（捂脸）…… 如果你照着我的、或者别人的教程搭好了这样一个小小的静态博客。首先，相信和我 一样是充满成就感的，Hello World 两个单词仿佛是一个广阔的新世界你面前缓缓展开。其次，你也一定会注意到它是简单的，流程并不复杂，而且我们不曾敲过一行代码，那些真正麻烦的工作，hexo 给我们静静地办好了。无论如何，博客是我们的，我们可以自由的享用它了。 处于篇幅上的考虑，我最后还是决定把它写成一个搭建静态博客系列教程。做个预告吧： 下一篇：如何写博客、解析到个人域名。","categories":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://example.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"}],"tags":[{"name":"Code","slug":"Code","permalink":"http://example.com/tags/Code/"},{"name":"静态博客教程","slug":"静态博客教程","permalink":"http://example.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"}]}],"categories":[{"name":"搭建博客","slug":"搭建博客","permalink":"http://example.com/categories/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"name":"歌词翻译","slug":"歌词翻译","permalink":"http://example.com/categories/%E6%AD%8C%E8%AF%8D%E7%BF%BB%E8%AF%91/"},{"name":"语摘","slug":"语摘","permalink":"http://example.com/categories/%E8%AF%AD%E6%91%98/"},{"name":"软件教程","slug":"软件教程","permalink":"http://example.com/categories/%E8%BD%AF%E4%BB%B6%E6%95%99%E7%A8%8B/"},{"name":"小文章","slug":"小文章","permalink":"http://example.com/categories/%E5%B0%8F%E6%96%87%E7%AB%A0/"},{"name":"刺客信条旅游指南","slug":"刺客信条旅游指南","permalink":"http://example.com/categories/%E5%88%BA%E5%AE%A2%E4%BF%A1%E6%9D%A1%E6%97%85%E6%B8%B8%E6%8C%87%E5%8D%97/"}],"tags":[{"name":"批处理脚本，hexo","slug":"批处理脚本，hexo","permalink":"http://example.com/tags/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC%EF%BC%8Chexo/"},{"name":"Music","slug":"Music","permalink":"http://example.com/tags/Music/"},{"name":"ILLENIUM","slug":"ILLENIUM","permalink":"http://example.com/tags/ILLENIUM/"},{"name":"翻译","slug":"翻译","permalink":"http://example.com/tags/%E7%BF%BB%E8%AF%91/"},{"name":"歌词","slug":"歌词","permalink":"http://example.com/tags/%E6%AD%8C%E8%AF%8D/"},{"name":"电影","slug":"电影","permalink":"http://example.com/tags/%E7%94%B5%E5%BD%B1/"},{"name":"天国王朝","slug":"天国王朝","permalink":"http://example.com/tags/%E5%A4%A9%E5%9B%BD%E7%8E%8B%E6%9C%9D/"},{"name":"语摘，非技术","slug":"语摘，非技术","permalink":"http://example.com/tags/%E8%AF%AD%E6%91%98%EF%BC%8C%E9%9D%9E%E6%8A%80%E6%9C%AF/"},{"name":"Code","slug":"Code","permalink":"http://example.com/tags/Code/"},{"name":"VS Code","slug":"VS-Code","permalink":"http://example.com/tags/VS-Code/"},{"name":"软件技巧","slug":"软件技巧","permalink":"http://example.com/tags/%E8%BD%AF%E4%BB%B6%E6%8A%80%E5%B7%A7/"},{"name":"Game","slug":"Game","permalink":"http://example.com/tags/Game/"},{"name":"OverThoughts","slug":"OverThoughts","permalink":"http://example.com/tags/OverThoughts/"},{"name":"静态博客教程","slug":"静态博客教程","permalink":"http://example.com/tags/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"},{"name":"Culture","slug":"Culture","permalink":"http://example.com/tags/Culture/"}]}